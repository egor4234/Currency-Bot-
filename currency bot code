import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.enums import ParseMode
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.client.default import DefaultBotProperties
import requests

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
API_TOKEN = "7943192472:AAHem2G04p4kRO9KQjHJKzMVqKcnhQ5zYDI"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(
    token=API_TOKEN,
    default=DefaultBotProperties(parse_mode=None)  # –û—Ç–∫–ª—é—á–∞–µ–º HTML-—Ä–∞–∑–º–µ—Ç–∫—É
)
dp = Dispatcher()

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_language = {}

# –°–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç —Å—Ç—Ä–∞–Ω, –≥—Ä–∞–Ω–∏—á–∞—â–∏—Ö —Å –£–∫—Ä–∞–∏–Ω–æ–π
CURRENCIES = {
    "USD": "üá∫üá∏ –î–æ–ª–ª–∞—Ä –°–®–ê",
    "EUR": "üá™üá∫ –ï–≤—Ä–æ",
    "PLN": "üáµüá± –ü–æ–ª—å—Å–∫–∏–π –∑–ª–æ—Ç—ã–π",
    "HUF": "üá≠üá∫ –í–µ–Ω–≥–µ—Ä—Å–∫–∏–π —Ñ–æ—Ä–∏–Ω—Ç",
    "RON": "üá∑üá¥ –†—É–º—ã–Ω—Å–∫–∏–π –ª–µ–π",
    "MDL": "üá≤üá© –ú–æ–ª–¥–∞–≤—Å–∫–∏–π –ª–µ–π",
    "BYN": "üáßüáæ –ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å",
    "RUB": "üá∑üá∫ –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å",
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç
def get_exchange_rate(base_currency: str, target_currency: str) -> float:
    url = f"https://api.exchangerate-api.com/v4/latest/{base_currency}"
    response = requests.get(url)
    data = response.json()
    return data['rates'].get(target_currency)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –≤–∞–ª—é—Ç–∞–º–∏
def get_currency_keyboard():
    builder = InlineKeyboardBuilder()
    for currency_code, currency_name in CURRENCIES.items():
        builder.button(text=f"{currency_name} ({currency_code})", callback_data=f"currency_{currency_code}")
    builder.adjust(2)  # –î–≤–µ –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ
    return builder.as_markup()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def cmd_start(message: Message):
    user_language[message.from_user.id] = "ru"  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫—É—Ä—Å –≤–∞–ª—é—Ç.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /rate —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –≤–∞–ª—é—Ç—É.",
        reply_markup=get_currency_keyboard(),
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /language
@dp.message(Command("language"))
async def cmd_language(message: Message):
    builder = InlineKeyboardBuilder()
    builder.button(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data="lang_ru")
    builder.button(text="üá¨üáß English", callback_data="lang_en")
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose language:", reply_markup=builder.as_markup())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /rate
@dp.message(Command("rate"))
async def cmd_rate(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É:", reply_markup=get_currency_keyboard())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
@dp.callback_query(lambda c: c.data.startswith("currency_"))
async def process_currency(callback: CallbackQuery):
    target_currency = callback.data.split("_")[1]
    rate = get_exchange_rate("USD", target_currency)
    if rate:
        lang = user_language.get(callback.from_user.id, "ru")
        if lang == "ru":
            await callback.message.answer(f"–ö—É—Ä—Å USD –∫ {CURRENCIES[target_currency]}: {rate}")
        else:
            await callback.message.answer(f"Exchange rate USD to {CURRENCIES[target_currency]}: {rate}")
    else:
        await callback.message.answer("–í–∞–ª—é—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ / Currency not found.")
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
@dp.callback_query(lambda c: c.data.startswith("lang_"))
async def process_language(callback: CallbackQuery):
    lang = callback.data.split("_")[1]
    user_language[callback.from_user.id] = lang
    if lang == "ru":
        await callback.message.answer("–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ —Ä—É—Å—Å–∫–∏–π.")
    else:
        await callback.message.answer("Language changed to English.")
    await callback.answer()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
